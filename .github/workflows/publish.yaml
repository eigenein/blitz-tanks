name: ✨ Publish
run-name: 🔖 Publish ${{ github.ref_name }}

on:
  release:
    types: ["published"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: 🏗 Build
    runs-on: ubuntu-latest

    steps:
      - name: ✨ Set up the toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: aarch64-unknown-linux-gnu
          override: true

      - name: 📥 Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🖊 Set crate version
        run: |
          echo 'version = "${{ github.ref_name }}"'
          sed -i -e 's/version = "0.0.0"/version = "${{ github.ref_name }}"/g' Cargo.toml
          sed -i -e 's/version = "0.0.0"/version = "${{ github.ref_name }}"/g' Cargo.lock

      - name: 📝 Build Changelog
        id: changelog
        uses: Bullrich/generate-release-changelog@master
        env:
          REPO: ${{ github.repository }}

      - name: 📝 Update release
        uses: tubone24/update_release@v1.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changelog }}

      - name: 👷 Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=aarch64-unknown-linux-gnu

      - name: 📤 Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: target/aarch64-unknown-linux-gnu/release/blitz-tanks
          asset_name: blitz-tanks.aarch64-unknown-linux-gnu
          asset_content_type: application/octet-stream

      - name: 🐛 Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: eigenein
          SENTRY_PROJECT: blitz-tanks
        with:
          environment: production
          version: ${{ github.ref_name }}

  publish:
    name: ✨ Publish
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📥 Download release asset
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/${{ github.ref_name }}
          file: blitz-tanks.aarch64-unknown-linux-gnu
          target: blitz-tanks.aarch64-unknown-linux-gnu

      - name: 🕸 Set up Tailscale
        uses: tailscale/github-action@v1
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

      - name: 🔑 Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: unnecessary
          config: |
            Host mars
              User pi
              StrictHostKeyChecking no

      - name: ♻️ Rsync
        run: |
          chmod +x blitz-tanks.aarch64-unknown-linux-gnu
          rsync --compress --executability --stats --times --verbose blitz-tanks.aarch64-unknown-linux-gnu mars:/home/pi/bin/blitz-tanks

      - name: 🛑 Stop
        run: ssh mars "sudo systemctl stop blitz-tanks"

      - name: 📦 Archive the database
        run: ssh mars "ZST_CLEVEL=10 tar -Izstd -cvf .blitz-tanks/backups/${{ github.event.repository.pushed_at }}.tar.zstd .blitz-tanks/db.sled"

      - name: 📦 Export votes
        run: ssh mars "blitz-tanks export-votes --db-path .blitz-tanks/db.sled > .blitz-tanks/backups/${{ github.event.repository.pushed_at }}.votes.jsonl"

      - name: 🏁 Start
        run: ssh mars "sudo systemctl start blitz-tanks; systemctl status --lines=0 blitz-tanks"
